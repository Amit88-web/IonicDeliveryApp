{"version":3,"sources":["./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+DAA+D,kBAAkB;AACjF;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AACh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","file":"login-login-module-es2015.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent,\n        KeysPipe,\n        NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","export default \"<ion-content>\\n  <ion-progress-bar type=\\\"indeterminate\\\" *ngIf=\\\"hideNshowProgressBar\\\"></ion-progress-bar>\\n  <ion-item lines =\\\"none\\\" style=\\\"margin-top: 40px; \\\">\\n    <ion-thumbnail slot=\\\"start\\\" class=\\\"img-center\\\">\\n      <img src=\\\"assets/icon/Rent2Trust.jpeg\\\" style=\\\"width: 45%;\\\">\\n    </ion-thumbnail>\\n  </ion-item>\\n\\n  <ion-card *ngIf=\\\"selectedFrom == 'loginForm'\\\" style=\\\"text-align: center;\\\">\\n    <ion-card-content>\\n      <div>\\n        <ion-icon style=\\\"font-size: 50px;color: #339929;\\\" name=\\\"phone-portrait\\\"></ion-icon>\\n      </div>\\n      <h6>\\n          <b>Enter your mobile number</b>\\n      </h6>\\n      <h6 style=\\\"padding: 13px;\\\">\\n          We will send a 6-digit verification code to this mobile number\\n      </h6>\\n      <p>\\n        <!-- <hr style=\\\"box-sizing: border-box;border-width: 1px;border-color: #fff;\\\"> -->\\n        <ion-row>\\n          <ion-col size=\\\"3\\\">\\n            <ion-select placeholder=\\\"Select\\\" interface=\\\"action-sheet\\\" [(ngModel)]=\\\"countryCode\\\">\\n              <ion-select-option value=\\\"+91\\\">+91</ion-select-option>\\n              <ion-select-option value=\\\"+1\\\">+1</ion-select-option>\\n            </ion-select>\\n          </ion-col>\\n          <ion-col size=\\\"9\\\" style=\\\" padding-left: 0px;\\\">\\n            <ion-input  type=\\\"tel\\\"  maxlength=\\\"10\\\" [(ngModel)]=\\\"mobileNumber\\\" placeholder=\\\"Enter mobile number\\\"></ion-input>\\n          </ion-col>\\n        </ion-row>\\n        <!-- <hr style=\\\"box-sizing: border-box;border-width: 1px;border-color: #fff;\\\"> -->\\n      </p>\\n      <p>\\n        <ion-button expand=\\\"full\\\" color=\\\"primary\\\" id=\\\"sendCodeBtn\\\" (click)=\\\"sendVarificationCode()\\\">\\n            Send Code\\n        </ion-button>\\n      </p>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngIf=\\\"selectedFrom == 'loginOtpForm'\\\">\\n    <ion-card-content style=\\\"text-align: center\\\">\\n      <div>\\n        <ion-icon style=\\\"font-size: 50px;color: #339929;\\\" name=\\\"key\\\"></ion-icon>\\n      </div>\\n      <h6>\\n        <b>Verify your number</b>\\n      </h6>\\n      <h6 style=\\\"padding: 13px 13px 0;\\\">\\n        Enter the 6-digit Verification Code send to <b>{{mobileNumber}}</b> over SMS\\n      </h6>\\n      <!-- <p style=\\\"color: #d00c0f;\\\" (click)=\\\"resetNumberAlert()\\\">\\n        RESET <b>{{mobileNumber}}</b> NUMBER\\n      </p> -->\\n      <!-- <p> -->\\n      <ng-otp-input (onInputChange)=\\\"onOtpChange($event)\\\" [config]=\\\"config\\\"></ng-otp-input>\\n      <h6 style=\\\"color: #d00c0f;\\\" (click)=\\\"sendCode(phoneNumberWithCode)\\\">\\n          Resend Verification Code\\n      </h6>\\n      <!-- </p>  -->\\n      <p>\\n        <ion-button expand=\\\"full\\\" color=\\\"primary\\\" id=\\\"verifyNumberBtn\\\" [disabled]=\\\"!verifyDisable\\\" (click)=\\\"verifyNumber()\\\">\\n            Verify Number\\n        </ion-button>\\n      </p>\\n    </ion-card-content>\\n  </ion-card>\\n  <div style=\\\"margin-top: 0px; opacity: 0;position: absolute;\\n    bottom: 0px;\\\" id=\\\"recaptcha-container\\\">\\n  </div>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { NgOtpInputModule } from 'ng-otp-input';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NgOtpInputModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".img-center {\\n  width: 100%;\\n  margin: 20px auto;\\n  text-align: center;\\n  height: 100px;\\n}\\n\\n.icon-radius {\\n  margin-left: 50px;\\n  border-radius: 50%;\\n  border: 1px solid black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vRzpcXHVzZXJzXFxrZXNoYXZcXGdpdFxcUmVudDJUcnVzdC1EZWxpdmVyeS9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLnBhZ2Uuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWctY2VudGVyIHtcclxuICAgIHdpZHRoOiAxMDAlOyBcclxuICAgIG1hcmdpbjogMjBweCBhdXRvOyBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbn1cclxuXHJcbi5pY29uLXJhZGl1cyB7XHJcbiAgICBtYXJnaW4tbGVmdDogNTBweDsgICAgXHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxufSIsIi5pbWctY2VudGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwcHg7XG59XG5cbi5pY29uLXJhZGl1cyB7XG4gIG1hcmdpbi1sZWZ0OiA1MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\ndeclare var window;\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  public fireAuth               : any;\n  public windowRef              : any;\n  public otp                    : string = \"\";\n  public verificationId         : string = \"\";\n  public countryCode            : any ;\n  public mobileNumber           : any = \"\";\n  phoneNumberWithCode           : any;\n\n  public hideNshowProgressBar   : boolean = false;\n  public verifyDisable          : boolean = true;\n  selectedFrom                  : any = \"loginForm\";\n  progressNumber                : number = 0;\n  config = {\n    allowNumbersOnly: true,\n    length: 6,\n    isPasswordInput: false,\n  };\n  constructor(private router: Router,\n    private toastCtrl: ToastController,\n    private alertCtrl: AlertController,\n    private databaseService: DatabaseService) {\n      this.fireAuth = firebase.auth();\n     }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    const self = this;\n    self.windowRef = (<any>window);\n    self.windowRef.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n      //'type' : 'image',\n      'size': 'invisible',\n      //'badge': 'inline',\n      'callback': function (response) {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n      }\n    });\n\n    // render the rapchaVerifier. \n    self.windowRef.recaptchaVerifier.render().then(function (widgetId) {\n      self.windowRef.recaptchaWidgetId = widgetId;\n    });\n  }\n\n  //otp change input value\n  onOtpChange(event) {\n    //console.log(event);\n    this.otp = event;\n  }\n\n   //send verification code\n   async sendCode(mobileNumber) {\n    let self = this;\n    //set progress bar value\n    self.hideNshowProgressBar = true;\n    try {\n      const appVerifier = this.windowRef.recaptchaVerifier;\n      const credential = await this.fireAuth.signInWithPhoneNumber(mobileNumber, appVerifier);\n      if (credential) {\n        //hide progress bar loader\n        self.progressNumber = 1;\n        this.hideNshowProgressBar = false;\n        //switched to otp form\n        this.selectedFrom = 'loginOtpForm';\n        this.showToast('OTP Sent Successfully!');\n        //this.showVerify = true;\n        this.otp = \"\";\n        //In case of iOS credential is VerificationId\n        this.verificationId = credential.verificationId;\n        //this.smsRetrieverFunction();\n      } else {\n        //hide progress bar loader\n        self.progressNumber = 0;\n        this.hideNshowProgressBar = false;\n        //clearInterval(timerInterval);\n      }\n      this.windowRef.confirmationResult = credential;\n    } catch (error) {\n      //hide progress bar loader\n      self.progressNumber = 0;\n      this.hideNshowProgressBar = false;\n      this.showAlert(\"\", error);\n    }\n  }\n\n  // send verification code to mobile no\n  async sendVarificationCode() {\n    var self = this;\n    try {\n      if(self.mobileNumber == \"\" || self.mobileNumber == undefined) {\n        self.showErrorToast(\"Please enter mobile number\");\n        return;\n      } \n      if(self.countryCode == \"\" || self.countryCode == undefined) {\n        self.showErrorToast(\"Please select countryCode\");\n        return;\n      } \n      //show progress bar loade\n      self.hideNshowProgressBar = true;\n      const isPhoneNumberValid = await this.checkMobileNoLengthFunc(self,self.mobileNumber);\n      if (isPhoneNumberValid) {\n        self.phoneNumberWithCode = \"+91\" + this.mobileNumber;\n        self.sendCode(self.phoneNumberWithCode);\n      } else {\n        //hide progress bar loader\n        self.hideNshowProgressBar = false;\n      }\n    } catch (error) {\n      self.hideNshowProgressBar = false;\n      self.showAlert(`INFORMATION`, `Phone number is not registered Please Signup`);\n    }\n  }\n\n  //check Mobile No Length\n  async checkMobileNoLengthFunc(self, number) {\n    var mobileNo = Number(number);\n    var mobileSNo = String(number);\n    var integer = Number.isInteger(mobileNo);\n    if (mobileSNo.trim() == '') {\n      self.showToast(\"Number required\");\n      return false;\n    } else if (integer == false && mobileSNo.length < 11) {\n      self.showToast(\"Number is not valid\");\n      return false;\n    } else if (mobileNo == 0 || mobileNo.toString().length != mobileSNo.length) {\n      self.showToast(\"Number is not valid\");\n      return false;\n    } else {\n      var object = {\n        type: 'phone',\n        countryCode: this.countryCode,\n        data: mobileNo\n      }\n      const data = await self.databaseService.checkEmailOrNumberExistGCP(object);\n      if (data) {\n        //Call the singInUserInFb function for check entered user is valid or not\n        return true;\n      } else {\n        //self.showToast(\"Phone number is not registerd.\");\n        self.showAlert(`INFORMATION`, `Phone number is not registered Please Signup`);\n        return false;\n      }\n    }\n  }\n\n   //\n   async verifyNumber() {\n    var self = this;\n    // disable button\n    self.verifyDisable = false;\n    //set progress bar value\n    self.hideNshowProgressBar = true;\n    self.progressNumber = 0;\n    try {\n      // check OTP required\n      if (!self.otp || self.otp.length == 0) {\n        //Displaying toast to welcome user for Login!\n        var toast = await self.toastCtrl.create({\n          message: 'OTP required',\n          duration: 1500,\n          position: 'bottom'\n        });\n        await toast.present();\n        //set verify number btn Enable\n        self.verifyDisable = true;\n        //set progress bar value\n        self.hideNshowProgressBar = false;\n        return;\n      }\n      var verificationId = self.verificationId;\n      const signInCredential = await firebase.auth.PhoneAuthProvider.credential(verificationId, self.otp);\n      //alert(\"signInCredential -> \" + signInCredential);\n      const userObject: any = await firebase.auth().signInWithCredential(signInCredential);\n      if (userObject && userObject['user'] && userObject['user'].uid) {\n        const userId = userObject['user'].uid;\n        const userData = await this.databaseService.getUserDataByPhoneNo(self.phoneNumberWithCode);\n        if (userData.isSuccess) {\n          //set verify number btn Enable\n          self.verifyDisable = true;\n          //set progress bar value\n          self.progressNumber = 1;\n          self.hideNshowProgressBar = false;\n\n          const userDataDetails = userData.data[0];\n          //for client user\n          if (userDataDetails) {\n            localStorage.setItem(\"name\", userDataDetails.FullName);\n            localStorage.setItem(\"phoneNumber\", userDataDetails.phoneNumber);\n            localStorage.setItem(\"email\", userDataDetails.email);\n            localStorage.setItem(\"userId\", userDataDetails.userId);\n            localStorage.setItem(\"isloggedIn\", \"true\");\n            //set login form page\n            self.selectedFrom = \"loginForm\";\n            //navigate to home page for all use\n            this.router.navigateByUrl(\"home\");\n          } else {\n            //set verify number btn Enable\n            self.verifyDisable = true;\n            //set progress bar value\n            self.progressNumber = 0;\n            self.hideNshowProgressBar = false;\n            self.showAlert(`INFORMATION`, `You don't have the permission to access the application`)\n          }\n        } else {\n          //set verify number btn Enable\n          self.verifyDisable = true;\n          //set progress bar value\n          self.progressNumber = 0;\n          self.hideNshowProgressBar = false;\n          self.showToast(`User not found with ${self.phoneNumberWithCode} number`);\n        }\n      } else {\n        //set verify number btn Enable\n        self.verifyDisable = true;\n        //set progress bar value\n        self.progressNumber = 0;\n        self.hideNshowProgressBar = false;\n        self.showToast(`User not found with ${self.phoneNumberWithCode} number`);\n      }\n    } catch (error) {\n      //set verify number btn Enable\n      self.verifyDisable = true;\n      //set progress bar value\n      self.progressNumber = 0;\n      self.hideNshowProgressBar = false;\n      self.showToast(error.message);\n    }\n  }\n\n  changeNumber() {\n    //this.showVerify = false;\n    this.otp = \"\";\n  }\n\n  //show alert\n  async showAlert(title, message) {\n    let self = this;\n    const alert = await this.alertCtrl.create({\n      header: title,\n      message: message,\n      backdropDismiss:false,\n      buttons: [{\n        text: 'Ok',\n        cssClass: \"success-color\",\n        handler: () => {\n          //navigate to signup page for all use\n          self.router.navigateByUrl(\"signup\");\n        }\n      }]\n    });\n    return await alert.present();\n  }\n\n  //show toast\n  async showToast(message) {\n    var toast = await this.toastCtrl.create({\n      message: message,\n      duration: 1500,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n\n  //showErrorToast function for error\n  async showErrorToast(messages) {\n\t\tvar self = this ;\n\t\tvar toast = await self.toastCtrl.create({\n\t\t\tmessage         : messages,\n\t\t\tduration        : 2000,\n\t\t\tposition        : 'bottom',\n\t\t\tcssClass        : \"cmnToastColor\"\n\t\t});\n\t\ttoast.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}